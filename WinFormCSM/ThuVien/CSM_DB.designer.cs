#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ThuVien
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CSM")]
	public partial class CSM_DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietDonHang(ChiTietDonHang instance);
    partial void UpdateChiTietDonHang(ChiTietDonHang instance);
    partial void DeleteChiTietDonHang(ChiTietDonHang instance);
    partial void InsertThanhToan(ThanhToan instance);
    partial void UpdateThanhToan(ThanhToan instance);
    partial void DeleteThanhToan(ThanhToan instance);
    partial void InsertDanhMuc(DanhMuc instance);
    partial void UpdateDanhMuc(DanhMuc instance);
    partial void DeleteDanhMuc(DanhMuc instance);
    partial void InsertDonHang(DonHang instance);
    partial void UpdateDonHang(DonHang instance);
    partial void DeleteDonHang(DonHang instance);
    partial void InsertGioHang(GioHang instance);
    partial void UpdateGioHang(GioHang instance);
    partial void DeleteGioHang(GioHang instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertPhanHoi(PhanHoi instance);
    partial void UpdatePhanHoi(PhanHoi instance);
    partial void DeletePhanHoi(PhanHoi instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    #endregion
		
		public CSM_DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CSM_DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CSM_DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CSM_DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}

        public CSM_DBDataContext() :
                base(global::ThuVien.Properties.Settings.Default.CSMConnectionString, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this.GetTable<ChiTietDonHang>();
			}
		}
		
		public System.Data.Linq.Table<ThanhToan> ThanhToans
		{
			get
			{
				return this.GetTable<ThanhToan>();
			}
		}
		
		public System.Data.Linq.Table<DanhMuc> DanhMucs
		{
			get
			{
				return this.GetTable<DanhMuc>();
			}
		}
		
		public System.Data.Linq.Table<DonHang> DonHangs
		{
			get
			{
				return this.GetTable<DonHang>();
			}
		}
		
		public System.Data.Linq.Table<GioHang> GioHangs
		{
			get
			{
				return this.GetTable<GioHang>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<PhanHoi> PhanHois
		{
			get
			{
				return this.GetTable<PhanHoi>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDonHang")]
	public partial class ChiTietDonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ChiTietDonHangID;
		
		private int _DonHangID;
		
		private int _SanPhamID;
		
		private int _SoLuong;
		
		private decimal _DonGia;
		
		private EntityRef<DonHang> _DonHang;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChiTietDonHangIDChanging(int value);
    partial void OnChiTietDonHangIDChanged();
    partial void OnDonHangIDChanging(int value);
    partial void OnDonHangIDChanged();
    partial void OnSanPhamIDChanging(int value);
    partial void OnSanPhamIDChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(decimal value);
    partial void OnDonGiaChanged();
    #endregion
		
		public ChiTietDonHang()
		{
			this._DonHang = default(EntityRef<DonHang>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiTietDonHangID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ChiTietDonHangID
		{
			get
			{
				return this._ChiTietDonHangID;
			}
			set
			{
				if ((this._ChiTietDonHangID != value))
				{
					this.OnChiTietDonHangIDChanging(value);
					this.SendPropertyChanging();
					this._ChiTietDonHangID = value;
					this.SendPropertyChanged("ChiTietDonHangID");
					this.OnChiTietDonHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonHangID", DbType="Int NOT NULL")]
		public int DonHangID
		{
			get
			{
				return this._DonHangID;
			}
			set
			{
				if ((this._DonHangID != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonHangIDChanging(value);
					this.SendPropertyChanging();
					this._DonHangID = value;
					this.SendPropertyChanged("DonHangID");
					this.OnDonHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamID", DbType="Int NOT NULL")]
		public int SanPhamID
		{
			get
			{
				return this._SanPhamID;
			}
			set
			{
				if ((this._SanPhamID != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPhamIDChanging(value);
					this.SendPropertyChanging();
					this._SanPhamID = value;
					this.SendPropertyChanged("SanPhamID");
					this.OnSanPhamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Decimal(18,2) NOT NULL")]
		public decimal DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_DonHang", ThisKey="DonHangID", OtherKey="DonHangID", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._DonHangID = value.DonHangID;
					}
					else
					{
						this._DonHangID = default(int);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDonHang", Storage="_SanPham", ThisKey="SanPhamID", OtherKey="SanPhamID", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._SanPhamID = value.SanPhamID;
					}
					else
					{
						this._SanPhamID = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThanhToan")]
	public partial class ThanhToan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThanhToanID;
		
		private int _DonHangID;
		
		private string _HinhThucThanhToan;
		
		private string _TinhTrangThanhToan;
		
		private System.Nullable<System.DateTime> _NgayThanhToan;
		
		private EntityRef<DonHang> _DonHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThanhToanIDChanging(int value);
    partial void OnThanhToanIDChanged();
    partial void OnDonHangIDChanging(int value);
    partial void OnDonHangIDChanged();
    partial void OnHinhThucThanhToanChanging(string value);
    partial void OnHinhThucThanhToanChanged();
    partial void OnTinhTrangThanhToanChanging(string value);
    partial void OnTinhTrangThanhToanChanged();
    partial void OnNgayThanhToanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThanhToanChanged();
    #endregion
		
		public ThanhToan()
		{
			this._DonHang = default(EntityRef<DonHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhToanID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ThanhToanID
		{
			get
			{
				return this._ThanhToanID;
			}
			set
			{
				if ((this._ThanhToanID != value))
				{
					this.OnThanhToanIDChanging(value);
					this.SendPropertyChanging();
					this._ThanhToanID = value;
					this.SendPropertyChanged("ThanhToanID");
					this.OnThanhToanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonHangID", DbType="Int NOT NULL")]
		public int DonHangID
		{
			get
			{
				return this._DonHangID;
			}
			set
			{
				if ((this._DonHangID != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonHangIDChanging(value);
					this.SendPropertyChanging();
					this._DonHangID = value;
					this.SendPropertyChanged("DonHangID");
					this.OnDonHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhThucThanhToan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HinhThucThanhToan
		{
			get
			{
				return this._HinhThucThanhToan;
			}
			set
			{
				if ((this._HinhThucThanhToan != value))
				{
					this.OnHinhThucThanhToanChanging(value);
					this.SendPropertyChanging();
					this._HinhThucThanhToan = value;
					this.SendPropertyChanged("HinhThucThanhToan");
					this.OnHinhThucThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangThanhToan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TinhTrangThanhToan
		{
			get
			{
				return this._TinhTrangThanhToan;
			}
			set
			{
				if ((this._TinhTrangThanhToan != value))
				{
					this.OnTinhTrangThanhToanChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangThanhToan = value;
					this.SendPropertyChanged("TinhTrangThanhToan");
					this.OnTinhTrangThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThanhToan", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayThanhToan
		{
			get
			{
				return this._NgayThanhToan;
			}
			set
			{
				if ((this._NgayThanhToan != value))
				{
					this.OnNgayThanhToanChanging(value);
					this.SendPropertyChanging();
					this._NgayThanhToan = value;
					this.SendPropertyChanged("NgayThanhToan");
					this.OnNgayThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ThanhToan", Storage="_DonHang", ThisKey="DonHangID", OtherKey="DonHangID", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.ThanhToans.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.ThanhToans.Add(this);
						this._DonHangID = value.DonHangID;
					}
					else
					{
						this._DonHangID = default(int);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc")]
	public partial class DanhMuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DanhMucID;
		
		private string _TenDanhMuc;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDanhMucIDChanging(int value);
    partial void OnDanhMucIDChanged();
    partial void OnTenDanhMucChanging(string value);
    partial void OnTenDanhMucChanged();
    #endregion
		
		public DanhMuc()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanhMucID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DanhMucID
		{
			get
			{
				return this._DanhMucID;
			}
			set
			{
				if ((this._DanhMucID != value))
				{
					this.OnDanhMucIDChanging(value);
					this.SendPropertyChanging();
					this._DanhMucID = value;
					this.SendPropertyChanged("DanhMucID");
					this.OnDanhMucIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDanhMuc", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenDanhMuc
		{
			get
			{
				return this._TenDanhMuc;
			}
			set
			{
				if ((this._TenDanhMuc != value))
				{
					this.OnTenDanhMucChanging(value);
					this.SendPropertyChanging();
					this._TenDanhMuc = value;
					this.SendPropertyChanged("TenDanhMuc");
					this.OnTenDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_SanPham", Storage="_SanPhams", ThisKey="DanhMucID", OtherKey="DanhMucID")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
	public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DonHangID;
		
		private int _NguoiDungID;
		
		private decimal _TongTien;
		
		private string _TinhTrangDonHang;
		
		private System.Nullable<System.DateTime> _NgayDatHang;
		
		private string _DiaChiGiaoHang;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
		private EntitySet<ThanhToan> _ThanhToans;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDonHangIDChanging(int value);
    partial void OnDonHangIDChanged();
    partial void OnNguoiDungIDChanging(int value);
    partial void OnNguoiDungIDChanged();
    partial void OnTongTienChanging(decimal value);
    partial void OnTongTienChanged();
    partial void OnTinhTrangDonHangChanging(string value);
    partial void OnTinhTrangDonHangChanged();
    partial void OnNgayDatHangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatHangChanged();
    partial void OnDiaChiGiaoHangChanging(string value);
    partial void OnDiaChiGiaoHangChanged();
    #endregion
		
		public DonHang()
		{
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			this._ThanhToans = new EntitySet<ThanhToan>(new Action<ThanhToan>(this.attach_ThanhToans), new Action<ThanhToan>(this.detach_ThanhToans));
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonHangID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DonHangID
		{
			get
			{
				return this._DonHangID;
			}
			set
			{
				if ((this._DonHangID != value))
				{
					this.OnDonHangIDChanging(value);
					this.SendPropertyChanging();
					this._DonHangID = value;
					this.SendPropertyChanged("DonHangID");
					this.OnDonHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiDungID", DbType="Int NOT NULL")]
		public int NguoiDungID
		{
			get
			{
				return this._NguoiDungID;
			}
			set
			{
				if ((this._NguoiDungID != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNguoiDungIDChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungID = value;
					this.SendPropertyChanged("NguoiDungID");
					this.OnNguoiDungIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Decimal(18,2) NOT NULL")]
		public decimal TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangDonHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TinhTrangDonHang
		{
			get
			{
				return this._TinhTrangDonHang;
			}
			set
			{
				if ((this._TinhTrangDonHang != value))
				{
					this.OnTinhTrangDonHangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangDonHang = value;
					this.SendPropertyChanged("TinhTrangDonHang");
					this.OnTinhTrangDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDatHang", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDatHang
		{
			get
			{
				return this._NgayDatHang;
			}
			set
			{
				if ((this._NgayDatHang != value))
				{
					this.OnNgayDatHangChanging(value);
					this.SendPropertyChanging();
					this._NgayDatHang = value;
					this.SendPropertyChanged("NgayDatHang");
					this.OnNgayDatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiGiaoHang", DbType="NVarChar(255)")]
		public string DiaChiGiaoHang
		{
			get
			{
				return this._DiaChiGiaoHang;
			}
			set
			{
				if ((this._DiaChiGiaoHang != value))
				{
					this.OnDiaChiGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._DiaChiGiaoHang = value;
					this.SendPropertyChanged("DiaChiGiaoHang");
					this.OnDiaChiGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="DonHangID", OtherKey="DonHangID")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ThanhToan", Storage="_ThanhToans", ThisKey="DonHangID", OtherKey="DonHangID")]
		public EntitySet<ThanhToan> ThanhToans
		{
			get
			{
				return this._ThanhToans;
			}
			set
			{
				this._ThanhToans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_DonHang", Storage="_NguoiDung", ThisKey="NguoiDungID", OtherKey="NguoiDungID", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._NguoiDungID = value.NguoiDungID;
					}
					else
					{
						this._NguoiDungID = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
		
		private void attach_ThanhToans(ThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_ThanhToans(ThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GioHang")]
	public partial class GioHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GioHangID;
		
		private int _NguoiDungID;
		
		private int _SanPhamID;
		
		private int _SoLuong;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGioHangIDChanging(int value);
    partial void OnGioHangIDChanged();
    partial void OnNguoiDungIDChanging(int value);
    partial void OnNguoiDungIDChanged();
    partial void OnSanPhamIDChanging(int value);
    partial void OnSanPhamIDChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    #endregion
		
		public GioHang()
		{
			this._NguoiDung = default(EntityRef<NguoiDung>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioHangID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GioHangID
		{
			get
			{
				return this._GioHangID;
			}
			set
			{
				if ((this._GioHangID != value))
				{
					this.OnGioHangIDChanging(value);
					this.SendPropertyChanging();
					this._GioHangID = value;
					this.SendPropertyChanged("GioHangID");
					this.OnGioHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiDungID", DbType="Int NOT NULL")]
		public int NguoiDungID
		{
			get
			{
				return this._NguoiDungID;
			}
			set
			{
				if ((this._NguoiDungID != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNguoiDungIDChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungID = value;
					this.SendPropertyChanged("NguoiDungID");
					this.OnNguoiDungIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamID", DbType="Int NOT NULL")]
		public int SanPhamID
		{
			get
			{
				return this._SanPhamID;
			}
			set
			{
				if ((this._SanPhamID != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPhamIDChanging(value);
					this.SendPropertyChanging();
					this._SanPhamID = value;
					this.SendPropertyChanged("SanPhamID");
					this.OnSanPhamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_GioHang", Storage="_NguoiDung", ThisKey="NguoiDungID", OtherKey="NguoiDungID", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.GioHangs.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.GioHangs.Add(this);
						this._NguoiDungID = value.NguoiDungID;
					}
					else
					{
						this._NguoiDungID = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_GioHang", Storage="_SanPham", ThisKey="SanPhamID", OtherKey="SanPhamID", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.GioHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.GioHangs.Add(this);
						this._SanPhamID = value.SanPhamID;
					}
					else
					{
						this._SanPhamID = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NguoiDungID;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private string _HoTen;
		
		private string _Email;
		
		private string _SoDienThoai;
		
		private string _DiaChi;
		
		private string _SoThich;
		
		private string _VaiTro;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private string _PhanKhucKH;
		
		private System.Nullable<bool> _Train;
		
		private System.Nullable<bool> _KichHoat;
		
		private EntitySet<DonHang> _DonHangs;
		
		private EntitySet<GioHang> _GioHangs;
		
		private EntitySet<PhanHoi> _PhanHois;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNguoiDungIDChanging(int value);
    partial void OnNguoiDungIDChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoThichChanging(string value);
    partial void OnSoThichChanged();
    partial void OnVaiTroChanging(string value);
    partial void OnVaiTroChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    partial void OnPhanKhucKHChanging(string value);
    partial void OnPhanKhucKHChanged();
    partial void OnTrainChanging(System.Nullable<bool> value);
    partial void OnTrainChanged();
    partial void OnKichHoatChanging(System.Nullable<bool> value);
    partial void OnKichHoatChanged();
    #endregion
		
		public NguoiDung()
		{
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			this._GioHangs = new EntitySet<GioHang>(new Action<GioHang>(this.attach_GioHangs), new Action<GioHang>(this.detach_GioHangs));
			this._PhanHois = new EntitySet<PhanHoi>(new Action<PhanHoi>(this.attach_PhanHois), new Action<PhanHoi>(this.detach_PhanHois));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiDungID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NguoiDungID
		{
			get
			{
				return this._NguoiDungID;
			}
			set
			{
				if ((this._NguoiDungID != value))
				{
					this.OnNguoiDungIDChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungID = value;
					this.SendPropertyChanged("NguoiDungID");
					this.OnNguoiDungIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(15)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoThich", DbType="NVarChar(255)")]
		public string SoThich
		{
			get
			{
				return this._SoThich;
			}
			set
			{
				if ((this._SoThich != value))
				{
					this.OnSoThichChanging(value);
					this.SendPropertyChanging();
					this._SoThich = value;
					this.SendPropertyChanged("SoThich");
					this.OnSoThichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VaiTro", DbType="NVarChar(50)")]
		public string VaiTro
		{
			get
			{
				return this._VaiTro;
			}
			set
			{
				if ((this._VaiTro != value))
				{
					this.OnVaiTroChanging(value);
					this.SendPropertyChanging();
					this._VaiTro = value;
					this.SendPropertyChanged("VaiTro");
					this.OnVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanKhucKH", DbType="NVarChar(100)")]
		public string PhanKhucKH
		{
			get
			{
				return this._PhanKhucKH;
			}
			set
			{
				if ((this._PhanKhucKH != value))
				{
					this.OnPhanKhucKHChanging(value);
					this.SendPropertyChanging();
					this._PhanKhucKH = value;
					this.SendPropertyChanged("PhanKhucKH");
					this.OnPhanKhucKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Train", DbType="Bit")]
		public System.Nullable<bool> Train
		{
			get
			{
				return this._Train;
			}
			set
			{
				if ((this._Train != value))
				{
					this.OnTrainChanging(value);
					this.SendPropertyChanging();
					this._Train = value;
					this.SendPropertyChanged("Train");
					this.OnTrainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KichHoat", DbType="Bit")]
		public System.Nullable<bool> KichHoat
		{
			get
			{
				return this._KichHoat;
			}
			set
			{
				if ((this._KichHoat != value))
				{
					this.OnKichHoatChanging(value);
					this.SendPropertyChanging();
					this._KichHoat = value;
					this.SendPropertyChanged("KichHoat");
					this.OnKichHoatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_DonHang", Storage="_DonHangs", ThisKey="NguoiDungID", OtherKey="NguoiDungID")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_GioHang", Storage="_GioHangs", ThisKey="NguoiDungID", OtherKey="NguoiDungID")]
		public EntitySet<GioHang> GioHangs
		{
			get
			{
				return this._GioHangs;
			}
			set
			{
				this._GioHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_PhanHoi", Storage="_PhanHois", ThisKey="NguoiDungID", OtherKey="NguoiDungID")]
		public EntitySet<PhanHoi> PhanHois
		{
			get
			{
				return this._PhanHois;
			}
			set
			{
				this._PhanHois.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_PhanHois(PhanHoi entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_PhanHois(PhanHoi entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanHoi")]
	public partial class PhanHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhanHoiID;
		
		private int _SanPhamID;
		
		private int _NguoiDungID;
		
		private string _NoiDung;
		
		private System.Nullable<int> _DanhGia;
		
		private System.Nullable<System.DateTime> _NgayPhanHoi;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhanHoiIDChanging(int value);
    partial void OnPhanHoiIDChanged();
    partial void OnSanPhamIDChanging(int value);
    partial void OnSanPhamIDChanged();
    partial void OnNguoiDungIDChanging(int value);
    partial void OnNguoiDungIDChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnDanhGiaChanging(System.Nullable<int> value);
    partial void OnDanhGiaChanged();
    partial void OnNgayPhanHoiChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayPhanHoiChanged();
    #endregion
		
		public PhanHoi()
		{
			this._NguoiDung = default(EntityRef<NguoiDung>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanHoiID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhanHoiID
		{
			get
			{
				return this._PhanHoiID;
			}
			set
			{
				if ((this._PhanHoiID != value))
				{
					this.OnPhanHoiIDChanging(value);
					this.SendPropertyChanging();
					this._PhanHoiID = value;
					this.SendPropertyChanged("PhanHoiID");
					this.OnPhanHoiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamID", DbType="Int NOT NULL")]
		public int SanPhamID
		{
			get
			{
				return this._SanPhamID;
			}
			set
			{
				if ((this._SanPhamID != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSanPhamIDChanging(value);
					this.SendPropertyChanging();
					this._SanPhamID = value;
					this.SendPropertyChanged("SanPhamID");
					this.OnSanPhamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiDungID", DbType="Int NOT NULL")]
		public int NguoiDungID
		{
			get
			{
				return this._NguoiDungID;
			}
			set
			{
				if ((this._NguoiDungID != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNguoiDungIDChanging(value);
					this.SendPropertyChanging();
					this._NguoiDungID = value;
					this.SendPropertyChanged("NguoiDungID");
					this.OnNguoiDungIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanhGia", DbType="Int")]
		public System.Nullable<int> DanhGia
		{
			get
			{
				return this._DanhGia;
			}
			set
			{
				if ((this._DanhGia != value))
				{
					this.OnDanhGiaChanging(value);
					this.SendPropertyChanging();
					this._DanhGia = value;
					this.SendPropertyChanged("DanhGia");
					this.OnDanhGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayPhanHoi", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayPhanHoi
		{
			get
			{
				return this._NgayPhanHoi;
			}
			set
			{
				if ((this._NgayPhanHoi != value))
				{
					this.OnNgayPhanHoiChanging(value);
					this.SendPropertyChanging();
					this._NgayPhanHoi = value;
					this.SendPropertyChanged("NgayPhanHoi");
					this.OnNgayPhanHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_PhanHoi", Storage="_NguoiDung", ThisKey="NguoiDungID", OtherKey="NguoiDungID", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.PhanHois.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.PhanHois.Add(this);
						this._NguoiDungID = value.NguoiDungID;
					}
					else
					{
						this._NguoiDungID = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_PhanHoi", Storage="_SanPham", ThisKey="SanPhamID", OtherKey="SanPhamID", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.PhanHois.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.PhanHois.Add(this);
						this._SanPhamID = value.SanPhamID;
					}
					else
					{
						this._SanPhamID = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SanPhamID;
		
		private string _TenSanPham;
		
		private string _MoTa;
		
		private decimal _Gia;
		
		private int _SoLuongTonKho;
		
		private System.Nullable<int> _DanhMucID;
		
		private string _HinhAnhUrl;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private System.Nullable<bool> _KichHoat;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
		private EntitySet<GioHang> _GioHangs;
		
		private EntitySet<PhanHoi> _PhanHois;
		
		private EntityRef<DanhMuc> _DanhMuc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSanPhamIDChanging(int value);
    partial void OnSanPhamIDChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnGiaChanging(decimal value);
    partial void OnGiaChanged();
    partial void OnSoLuongTonKhoChanging(int value);
    partial void OnSoLuongTonKhoChanged();
    partial void OnDanhMucIDChanging(System.Nullable<int> value);
    partial void OnDanhMucIDChanged();
    partial void OnHinhAnhUrlChanging(string value);
    partial void OnHinhAnhUrlChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    partial void OnKichHoatChanging(System.Nullable<bool> value);
    partial void OnKichHoatChanged();
    #endregion
		
		public SanPham()
		{
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			this._GioHangs = new EntitySet<GioHang>(new Action<GioHang>(this.attach_GioHangs), new Action<GioHang>(this.detach_GioHangs));
			this._PhanHois = new EntitySet<PhanHoi>(new Action<PhanHoi>(this.attach_PhanHois), new Action<PhanHoi>(this.detach_PhanHois));
			this._DanhMuc = default(EntityRef<DanhMuc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanPhamID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SanPhamID
		{
			get
			{
				return this._SanPhamID;
			}
			set
			{
				if ((this._SanPhamID != value))
				{
					this.OnSanPhamIDChanging(value);
					this.SendPropertyChanging();
					this._SanPhamID = value;
					this.SendPropertyChanged("SanPhamID");
					this.OnSanPhamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(MAX)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Decimal(18,2) NOT NULL")]
		public decimal Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTonKho", DbType="Int NOT NULL")]
		public int SoLuongTonKho
		{
			get
			{
				return this._SoLuongTonKho;
			}
			set
			{
				if ((this._SoLuongTonKho != value))
				{
					this.OnSoLuongTonKhoChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTonKho = value;
					this.SendPropertyChanged("SoLuongTonKho");
					this.OnSoLuongTonKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanhMucID", DbType="Int")]
		public System.Nullable<int> DanhMucID
		{
			get
			{
				return this._DanhMucID;
			}
			set
			{
				if ((this._DanhMucID != value))
				{
					if (this._DanhMuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDanhMucIDChanging(value);
					this.SendPropertyChanging();
					this._DanhMucID = value;
					this.SendPropertyChanged("DanhMucID");
					this.OnDanhMucIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnhUrl", DbType="NVarChar(255)")]
		public string HinhAnhUrl
		{
			get
			{
				return this._HinhAnhUrl;
			}
			set
			{
				if ((this._HinhAnhUrl != value))
				{
					this.OnHinhAnhUrlChanging(value);
					this.SendPropertyChanging();
					this._HinhAnhUrl = value;
					this.SendPropertyChanged("HinhAnhUrl");
					this.OnHinhAnhUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KichHoat", DbType="Bit")]
		public System.Nullable<bool> KichHoat
		{
			get
			{
				return this._KichHoat;
			}
			set
			{
				if ((this._KichHoat != value))
				{
					this.OnKichHoatChanging(value);
					this.SendPropertyChanging();
					this._KichHoat = value;
					this.SendPropertyChanged("KichHoat");
					this.OnKichHoatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="SanPhamID", OtherKey="SanPhamID")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_GioHang", Storage="_GioHangs", ThisKey="SanPhamID", OtherKey="SanPhamID")]
		public EntitySet<GioHang> GioHangs
		{
			get
			{
				return this._GioHangs;
			}
			set
			{
				this._GioHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_PhanHoi", Storage="_PhanHois", ThisKey="SanPhamID", OtherKey="SanPhamID")]
		public EntitySet<PhanHoi> PhanHois
		{
			get
			{
				return this._PhanHois;
			}
			set
			{
				this._PhanHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_SanPham", Storage="_DanhMuc", ThisKey="DanhMucID", OtherKey="DanhMucID", IsForeignKey=true)]
		public DanhMuc DanhMuc
		{
			get
			{
				return this._DanhMuc.Entity;
			}
			set
			{
				DanhMuc previousValue = this._DanhMuc.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._DanhMuc.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._DanhMucID = value.DanhMucID;
					}
					else
					{
						this._DanhMucID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DanhMuc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_PhanHois(PhanHoi entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_PhanHois(PhanHoi entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
}
#pragma warning restore 1591
